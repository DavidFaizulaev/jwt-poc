image: docker-registry.zooz.co:4567/cd/ci-runners:official-node-12

stages:
  - test
  - build
  - integration-tests
  - deploy-review
  - deploy-review-kong
  - deploy-dev
  - deploy-dev-kong
  - deploy-qa
  - deploy-qa-kong
  - end-2-end-tests
  - deploy-review-stop
  - deploy-mars
  - deploy-mars-kong
  - end-2-end-tests-mars
  - deploy-prd
  - deploy-prd-kong
  - release

services:
  - docker:dind

variables:
  PROJECT_TYPE: node
  DOCKER_DRIVER: overlay2
  DOCKER_NETWORK_DRIVER: "host"
  DOCKER_TLS_CERTDIR: ""
  NAMESPACE: apps
  DEPLOYMENT_TYPE: deployment
  DOCKER_HOST: tcp://localhost:2375

include:
  - project: paymentsos/quality-clan/gitlab-quality-template
    file: template.yaml
    ref: v2

before_script:
  - echo $CI_BUILD_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  - source config/loadEnv.sh

# ------- Tests ------- #
.test_template: &test_definition
  tags:
    - eks-dev-apps
  variables:
    ENVIRONMENT: sandbox
    CLUSTER: dev
  artifacts:
    when: always
    name: $CI_JOB_STAGE-$CI_JOB_NAME-$CI_PIPELINE_ID
    expire_in: 3 days
    paths:
      - coverage/
      - logs/
  except:
    - tags

.cache_modules:
  tags:
    - eks-dev-apps
  stage: .pre
  before_script: []
  after_script: []
  script:
    - npm ci --cache .npm --no-audit --prefer-cache
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/
  artifacts:
    expire_in: 1 days
    paths:
      - node_modules
    when: on_success

code_quality:
  variables:
    SOURCE_DIR: src
  stage: test
  only:
    changes:
      - src/**/*

# ------- Build ------- #
build:app:
  tags:
    - eks-dev-apps
  stage: build
  dependencies: []
  script:
    - docker build --network host -t $APP_IMAGE .
    - docker push $APP_IMAGE
  except:
    - tags

cassandra-model:
  tags:
    - eks-dev-apps
  stage: build
  dependencies: []
  script:
    - docker build --network host -t $CASSANDRA_MIGRATION_IMAGE ./config/cassandra
    - docker push $CASSANDRA_MIGRATION_IMAGE
  except:
    - schedules

# -------------- Unit tests -------------- #
test:unit:
  <<: *test_definition
  stage: test
  script:
    - npm test
  only:
    - master
    - branches
  except:
    - tags

# -------------- Integration tests dev -------------- #
test:integration-ps:
  <<: *test_definition
  stage: integration-tests
  script:
    - npm run test:integration-ps
  only:
    - master
    - branches
  except:
    - tags

test:integration-fss:
  <<: *test_definition
  stage: integration-tests
  script:
    - npm run test:integration-fss
  only:
    - master
    - branches
  except:
    - tags

test:integration-apps:
  <<: *test_definition
  stage: integration-tests
  script:
    - npm run test:integration-apps-storage
  only:
    - master
    - branches
  except:
    - tags

# -------------- end-2-end tests qa -------------- #
test:end-2-end:qa:
  <<: *test_definition
  stage: end-2-end-tests
  image: docker-registry.zooz.co:4567/cd/ci-runners/runners:gitlab-node-12-docker-comopose-install-kubectl
  tags:
    - eks-qa-apps
  variables:
    CLUSTER: qa
    ENVIRONMENT: sandbox
  script:
    - npm run test:e2e
    - DEPLOYMENT_NAME=$(kubectl get pods -n apps | grep $CHART_NAME | awk '{print $1}')
    - echo $DEPLOYMENT_NAME
    - kubectl logs $DEPLOYMENT_NAME -n apps -c $CHART_NAME > ./logs/$CHART_NAME.log
    - $(npm bin)/data-sentry -f ./logs/data-sentry-values.txt -d ./logs/$CHART_NAME.log
  only:
    - branches
    - master

# -------------- end-2-end tests mars -------------- #
test:end-2-end:mars:
  <<: *test_definition
  stage: end-2-end-tests-mars
  image: docker-registry.zooz.co:4567/cd/ci-runners/runners:gitlab-node-12-docker-comopose-install-kubectl
  tags:
    - eks-mars-pci-apps
  variables:
    CLUSTER: mars
    ENVIRONMENT: sandbox
  script:
    - npm run test:e2e
    - DEPLOYMENT_NAME=$(kubectl get pods -n apps | grep $CHART_NAME | awk '{print $1}')
    - echo $DEPLOYMENT_NAME
    - kubectl logs $DEPLOYMENT_NAME -n apps -c $CHART_NAME > ./logs/$CHART_NAME.log
    - $(npm bin)/data-sentry -f ./logs/data-sentry-values.txt -d ./logs/$CHART_NAME.log
  only:
    - master

# -------------- k8s Deployments -------------- #
.deploy-template: &deploy-template-ref
  image: docker-registry.zooz.co:4567/payu-clan-sre/utils/k8s-deployment/releases:v10-latest
  script:
    - source ./config/set-centralized-config-variables.sh
    # - DEPLOYMENT_TYPE=job k8s-deploy --helm-path=$PWD/cassandra-migration-chart --display-values=true
    - k8s-deploy --helm-path=$PWD/deployment-chart --display-values=true --status-check-timeout=180
  only:
    - master
    - tags
  except:
    - schedules

.kong-deploy-template: &deploy-kong-template-ref
  image: docker-registry.zooz.co:4567/payu-clan-sre/utils/k8s-deployment/releases:v10-latest
  variables:
    ENV: config
    ENVIRONMENT: kong
  script:
    - source ./config/kong/set-kong-centralized-config-variables.sh
    - source ./config/kong/loadKongVariables.sh
    - DEPLOYMENT_TYPE=job k8s-deploy --helm-path=$PWD/kong-deployment-chart --display-values=true --status-check-timeout=180
  except:
    - schedules

.clear-kong-template: &clear-kong-template-ref
  image: docker-registry.zooz.co:4567/payu-clan-sre/utils/k8s-deployment/releases:v10-latest
  variables:
    ENV: remove
    ENVIRONMENT: kong
    GIT_STRATEGY: none
  before_script:
    - echo $CI_BUILD_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.zooz.co/PaymentsOS/risk/risk-gateway.git
    - cd risk-gateway
    - source config/loadEnv.sh
  script:
    - source ./config/kong/set-kong-centralized-config-variables.sh
    - source ./config/kong/loadKongVariables.sh
    - DEPLOYMENT_TYPE=job k8s-deploy --helm-path=$PWD/kong-deployment-chart --display-values=true --status-check-timeout=180
  only:
    - branches

deploy:review:k8s:
  <<: *deploy-template-ref
  tags:
    - eks-qa-apps
  stage: deploy-review
  variables:
    ENVIRONMENT: sandbox
    ENV: config
  environment:
    name: review/$CI_BUILD_REF_SLUG
    on_stop: deploy:review:stop:k8s
  only:
    - branches
  except:
    - master
    - tags

deploy:review:kong:
  <<: *deploy-kong-template-ref
  tags:
    - eks-qa-apps
  stage: deploy-review-kong
  only:
    - branches
  environment:
    name: review/kong/$CI_BUILD_REF_SLUG
  except:
    - master
    - tags

deploy:review:stop:k8s:
  image: docker-registry.zooz.co:4567/payu-clan-sre/utils/k8s-deployment/releases:v10-latest
  tags:
    - eks-qa-apps
  stage: deploy-review-stop
  variables:
    ENVIRONMENT: sandbox
    ENV: config
    NAMESPACE: apps
    GIT_STRATEGY: none
  environment:
    name: review/$CI_BUILD_REF_SLUG
    action: stop
  before_script:
    - echo $CI_BUILD_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.zooz.co/PaymentsOS/risk/risk-gateway.git
    - cd risk-gateway
    - source config/loadEnv.sh
  script:
    - k8s-clear --resources=services,deployments
  only:
    - branches
  except:
    - master
    - tags

deploy:review:kong:stop:
  <<: *clear-kong-template-ref
  tags:
    - eks-qa-apps
  stage: deploy-review-stop
  only:
    - branches
  environment:
    name: review/kong/$CI_BUILD_REF_SLUG
  except:
    - master
    - tags

deploy:dev:sandbox:k8s:
  <<: *deploy-template-ref
  tags:
    - eks-dev-apps
  stage: deploy-dev
  variables:
    ENVIRONMENT: sandbox
    ENV: config
  only:
    - master

deploy:dev:live:k8s:
  <<: *deploy-template-ref
  tags:
    - eks-dev-apps
  stage: deploy-dev
  variables:
    ENVIRONMENT: live
    ENV: config
  only:
    - master

deploy:dev:kong:
  <<: *deploy-kong-template-ref
  tags:
    - eks-dev-apps
  stage: deploy-dev-kong
  only:
    - master

deploy:qa:sandbox:k8s:
  <<: *deploy-template-ref
  tags:
    - eks-qa-apps
  stage: deploy-qa
  variables:
    ENVIRONMENT: sandbox
    ENV: config
  only:
    - master

deploy:qa:live:k8s:
  <<: *deploy-template-ref
  tags:
    - eks-qa-apps
  stage: deploy-qa
  variables:
    ENVIRONMENT: live
    ENV: config
  only:
    - master

deploy:qa:kong:
  <<: *deploy-kong-template-ref
  tags:
    - eks-qa-apps
  stage: deploy-qa-kong
  only:
    - master

deploy:mars:sandbox:k8s:
  <<: *deploy-template-ref
  tags:
    - eks-mars-pci
  stage: deploy-mars
  environment:
    name: mars-sandbox
  variables:
    ENVIRONMENT: sandbox
    ENV: config
  only:
    - master

deploy:mars:live:k8s:
  <<: *deploy-template-ref
  tags:
    - eks-mars-pci
  stage: deploy-mars
  environment:
    name: mars-live
  variables:
    ENVIRONMENT: live
    ENV: config
  only:
    - master

deploy:mars:kong:
  <<: *deploy-kong-template-ref
  tags:
    - eks-mars-pci
  stage: deploy-mars-kong
  only:
    - master

deploy:prd:sandbox:k8s:
  <<: *deploy-template-ref
  tags:
    - eks-prd-pci-apps
  stage: deploy-prd
  environment:
    name: prod-sandbox
  variables:
    ENVIRONMENT: sandbox
    ENV: config
  only:
    - tags
  when: manual

deploy:prd:live:k8s:
  <<: *deploy-template-ref
  tags:
    - eks-prd-pci-apps
  stage: deploy-prd
  environment:
    name: prod-live
  variables:
    ENVIRONMENT: live
    ENV: config
  only:
    - tags
  when: manual

deploy:prd:kong:
  <<: *deploy-kong-template-ref
  tags:
    - eks-prd-pci-apps
  stage: deploy-prd-kong
  only:
    - tags
  when: manual

# -------------- Dashboards --------------- #
.k8s-dashboard-template: &k8s-dashboards-ref
  image: docker-registry.zooz.co:4567/payu-clan-sre/monitoring-projects/tools/hub-euler-executer/releases:1.0.16
  tags:
    - eks-dev-apps
  before_script:
    - echo "override before_script"
  script:
    - EULER_DEFINITION=$PWD/monitoring-dashboards/k8s-grafana-config.json FOLDER=risk-gateway build-dashboards
  when: manual
  except:
    - schedules
  only:
    - master

deploy-mars-dashboards:
  <<: *k8s-dashboards-ref
  stage: deploy-mars
  variables:
    ENV: eks-mars-pci

deploy-prd-dashboards:
  <<: *k8s-dashboards-ref
  tags:
    - eks-prd-pci-apps
  stage: deploy-prd
  variables:
    ENV: eks-prd-pci
  only:
    - tags

# -------------- Release -------------- #
release:
  image: docker-registry.zooz.co:4567/paymentsos/quality-clan/tagz:v2-latest
  tags:
    - eks-dev-apps
  stage: release
  dependencies: []
  script:
    - npm i -g tagz@2 --registry=http://npm.zooz.co:8083
    - tagz --release-image $APP_IMAGE --tagged-image-path /tags
  only:
    - master
  when: manual
