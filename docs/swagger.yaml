openapi: 3.0.0
servers:
  - url: 'https://api.paymentsos.com/'
info:
  version: 1.3.0
  title: Risk Analyses
  description: Service will handle risk evaluation requests

paths:
  /payments/{payment_id}/risk-analyses:
    parameters:
      - $ref: '#/components/parameters/api-version'
      - $ref: '#/components/parameters/x-payments-os-env'
      - $ref: '#/components/parameters/app-id'
      - $ref: '#/components/parameters/private-key'
      - $ref: '#/components/parameters/payment_id'
    post:
      description: Create a risk analyses
      tags:
        - Risk Analyses
      parameters:
        - $ref: '#/components/parameters/x-client-ip-address'
        - $ref: '#/components/parameters/idempotency-key'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_risk_analyses'
        required: true
      responses:
        '201':
          description: Created
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
            self:
              description: The href link to the current resource.
              schema:
                type: string
                pattern: '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/risk_analyses_resource'
        '400':
          description: Bad request
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '401':
          description: Unauthorized
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '403':
          description: Forbidden
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '404':
          description: Payment not found
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '409':
          description: Conflict - Cannot complete the request due a status conflict.
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '500':
          description: Internal Error
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '503':
          description: >-
            Service unavailable - The provider's server is currently
            unavailable.
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'

    get:
      description: Retrieve all risk analyses for this payment
      tags:
        -  Risk Analyses
      responses:
        '200':
          description: OK
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
            self:
              description: The href link to the current resource.
              schema:
                type: string
                pattern: '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/risk_analyses_resource'
        '400':
          description: Bad request
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '401':
          description: Unauthorized
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '403':
          description: Forbidden
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '404':
          description: Payment not found
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '500':
          description: Internal Error
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
  /payments/{payment_id}/risk-analyses/{risk_analyses_id}:
    parameters:
      - $ref: '#/components/parameters/api-version'
      - $ref: '#/components/parameters/x-payments-os-env'
      - $ref: '#/components/parameters/app-id'
      - $ref: '#/components/parameters/private-key'
      - $ref: '#/components/parameters/payment_id'
      - $ref: '#/components/parameters/risk_analyses_id'
    get:
      description: Retrieve a specific risk analyses for a specific payment
      tags:
        - Risk Analyses
      responses:
        '200':
          description: OK
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
            self:
              description: The href link to the current resource.
              schema:
                type: string
                pattern: '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/risk_analyses_resource'
        '400':
          description: Bad request
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '401':
          description: Unauthorized
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '403':
          description: Forbidden
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '404':
          description: Payment not found
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '500':
          description: Internal Error
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
components:
  parameters:
    app-id:
      name: app-id
      in: header
      #      required: true - required only in kong
      example: com.mycomp.mybusinessunit
      schema:
        type: string
    private-key:
      name: private-key
      in: header
      #      required: true for kong.
      example: 0047c4ef-f658-4e6d-a040-5882e2285f34
      schema:
        type: string
    x-client-ip-address:
      name: x-client-ip-address
      in: header
      required: false
      description: >-
        The IP address of the client-userAgent (the client software that sent
        the request to the merchant).
      schema:
        type: string
        pattern: >-
          ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
    idempotency-key:
      name: idempotency-key
      description: Allows you to send a request that is "idempotent safe". The key must be unique and should only be used in one request.
      in: header
      required: false
      schema:
        type: string
    payment_id:
      name: payment_id
      in: path
      description: The identifier of the payment.
      required: true
      example: 9640e09b-85d0-4509-a19c-90aa65eb386a
      schema:
        type: string
    x-payments-os-env:
      name: x-payments-os-env
      in: header
      required: false
      description: >-
        PaymentsOS request destination environment, live or test. Default is
        live if not specified, or if an unrecognized value is provided.
      example: test
      schema:
        type: string
        enum:
          - live
          - test
        default: live
    api-version:
      name: api-version
      in: header
      required: false
      description: >-
        The version number of the PaymentsOS API. Supported from version 1.3.0.
      schema:
        type: string
    risk_analyses_id:
      name: risk_analyses_id
      in: path
      description: The identifier of the risk analyses resource.
      required: true
      example: 9640e09b-85d0-4509-a19c-90aa65eb386a
      schema:
        type: string

  schemas:
    additional_details:
      type: object
      description: Optional additional data stored in key/value pairs.
      additionalProperties:
        type: string

    tokenized_response:
      description: An object representing a tokenized payment method returned in a response.
      type: object
      required:
        - token_type
        - token
        - fingerprint
        - holder_name
        - last_4_digits
        - pass_luhn_validation
        - created
      properties:
        token_type:
          description: |
            The type of token. Possible values: `credit_card` or `billing_agreement`
          type: string
          enum:
            - credit_card
        token:
          description: >-
            The token representing the payment method (created using the
            create token request).
          type: string
        country_code:
          description: The country where the credit card was issued, in <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3" target="_blank">ISO 3166-1 alpha-3 </a> format.
          externalDocs:
            description: "ISO-3166"
            url: https://www.iso.org/obp/ui/
          type: string
          pattern: '^[A-Z]{3}$'
        holder_name:
          description: Name of the credit card holder.
          type: string
        expiration_date:
          description: |
            "Credit card expiration date."
            "Possible formats: mm-yyyy, mm-yy, mm.yyyy, mm.yy, mm/yy, mm/yyyy, mm yyyy, or mm yy."
          type: string
          pattern: ^(0[1-9]|1[0-2])(\/|\-|\.| )\d{2,4}
        last_4_digits:
          description: Masked credit card number (last four digits).
          type: string
          pattern: '^\d{4}$'
        pass_luhn_validation:
          $ref: '#/components/schemas/pass_luhn_validation'
        bin_number:
          description: |
            "The first six digits of the card number.
            "'BIN' = Bank Identification Number. (Also known as 'IIN'=Issuer Identification Number.)"
          type: string
          pattern: '^\d{6}$'
        vendor:
          description: The vendor of the credit card.
          type: string
        issuer:
          description: The issuer of the credit card.
          type: string
        card_type:
          description: The type of the credit card.
          type: string
        level:
          description: The credit card level (e.g. PREPAID, CLASSIC).
          type: string
        created:
          type: string
        customer:
          type: string
          description: The href link to the customer associated with this payment method.
        additional_details:
          description: Additional details recorded by the merchant in key/value pairs.
          additionalProperties:
            type: string
        billing_address:
          $ref: '#/components/schemas/address'
        shipping_address:
          $ref: '#/components/schemas/address'
        fingerprint:
          type: string
          description: >-
            Uniquely identifies this particular card number. You can use this
            attribute to check whether two tokens represent the same card
            number.



    untokenized_credit_card_response:
      description: An object representing a tokenized payment method returned in a response.
      required:
        - source_type
      properties:
        source_type:
          type: string
          enum: ['credit_card']
        country_code:
          description: The country where the credit card was issued, in <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3" target="_blank">ISO 3166-1 alpha-3 </a> format.
          externalDocs:
            description: "ISO-3166"
            url: https://www.iso.org/obp/ui/
          type: string
          pattern: '^[A-Z]{3}$'
        holder_name:
          description: Name of the credit card holder.
          type: string
        expiration_date:
          description: |
            "Credit card expiration date."
            "Possible formats: mm-yyyy, mm-yy, mm.yyyy, mm.yy, mm/yy, mm/yyyy, mm yyyy, or mm yy."
          type: string
          pattern: ^(0[1-9]|1[0-2])(\/|\-|\.| )\d{2,4}
        last_4_digits:
          description: Masked credit card number (last four digits).
          type: string
          pattern: '^\d{4}$'
        pass_luhn_validation:
          $ref: '#/components/schemas/pass_luhn_validation'
        bin_number:
          description: |
            "The first six digits of the credit card number."
            "'BIN' = Bank Identification Number. (Also known as 'IIN'=Issuer Identification Number.)"
          type: string
          pattern: '^\d{6}$'
        vendor:
          description: The vendor of the credit card.
          type: string
        issuer:
          description: The issuer of the credit card.
          type: string
        card_type:
          description: The type of the credit card.
          type: string
        level:
          description: The credit card level (e.g. PREPAID, CLASSIC).
          type: string
        created:
          type: string
        fingerprint:
          type: string
          description: >-
            Uniquely identifies this particular card number. You can use this
            attribute to check whether two tokens represent the same card
            number.

    error_model:
      required:
        - description
        - category
      properties:
        category:
          type: string
          description: Error code.
        description:
          type: string
          description: Error message for the developer.
        more_info:
          type: string
          description: 'More info about the error, can include link to the documentation.'

    token_type:
      description: The type of token
      type: string
      enum:
        - credit_card

    address:
      type: object
      description: Address.
      properties:
        country:
          description: Country code in <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3" target="_blank">ISO 3166-1 alpha-3</a> format.
          externalDocs:
            description: ISO-3166
            url: 'https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3'
          type: string
          pattern: '^[A-Z]{3}$'
          example: USA
        state:
          description: State.
          type: string
          example: TX
        city:
          description: City.
          type: string
          example: Greenville
        line1:
          description: Address line 1.
          type: string
          example: 10705 Old Mill Rd
        line2:
          description: Address line 2.
          type: string
          example: 11605 Young Mill Rd
        zip_code:
          description: Zip code / postal number.
          type: string
          example: 75402-3435
        title:
          description: Title ('salutation').
          type: string
          example: Dr.
        first_name:
          description: First name.
          type: string
          example: John
        last_name:
          description: Last name (surname).
          type: string
          example: Travolta
        phone:
          description: Phone number including the country code.
          type: string
          example: 13301303330
        email:
          description: Email address.
          type: string
          example: john.travolta@johntravolta.com
    new_risk_analyses:
      type: object
      description: Risk analyses object
      properties:
        payment_method:
          type: object
          description: This represents the Payment Method selected by the customer to pay.
          required:
            - type
          properties:
            type:
              description: |
                The type of payment method. Possible value: `tokenized`.
              type: string
              enum: ['untokenized', 'tokenized']
          oneOf:
            - $ref: '#/components/schemas/untokenized_request'
            - $ref: '#/components/schemas/tokenized_request'
        session_id:
          type: string
        device_id:
          type: string
        merchant:
          $ref: "#/components/schemas/merchant"
        authorization_code:
          type: string
        cvv_verification_code:
          type: string
          enum: ['M', 'N', 'P']
          description: |
            | M = match (passed)
            | N = no match (unknown)
            | P = not processed (disabled)
        three_d_secure_authentication_status:
          type: string
          enum: ['R', 'N', 'U', 'A', 'Y']
          description: |
            | R = authentication / account verification rejected; Issuer is rejecting authentication/verification and requests that authorisation not be attempted.
            | N = not authenticated / account not verified; Transaction denied
            | U (eci: 7 or 0) = enrolment not queried, unavailable, enrolment query error
            | A (eci: 6 or 1) = not enrolled, attempted authentication
            | Y (eci: 5 or 2) = authenticated successfully.
        acquirer:
          $ref: "#/components/schemas/acquirer"
        installments:
          $ref: '#/components/schemas/RiskInstallments'
        provider_specific_data:
          $ref: '#/components/schemas/ProviderRequestSpecificData'
        additional_details:
          additionalProperties:
            type: string





    tokenized_request:
      description: An object representing a tokenized payment method in a request.
      type: object
      required:
        - token
      properties:
        token:
          description: >-
            The token representing the payment method, (created using the
            create token request).
          type: string
    untokenized_request:
      description: An object representing an untokenized payment method in a request.
      type: object
      required:
        - source_type
      anyOf:
        - $ref: '#/components/schemas/credit_card_request'
      properties:
        source_type:
          description: |
            The type of alternative payment method selected by the customer
            to pay. Possible values - `credit_card`, `bank_transfer`, `cash`, `ewallet`, `debit_redirect`, `loyalty`.
          type: string
          enum: ['credit_card']
    credit_card_request:
      description: An object representing a tokenized payment method in a request.
      type: object
      properties:
        holder_name:
          description: "Name of the credit card holder."
          type: string
        expiration_date:
          description: |
            "Credit card expiration date."
            "Possible formats: mm-yyyy, mm-yy, mm.yyyy, mm.yy, mm/yy, mm/yyyy, mm yyyy, or mm yy."
          type: string
          pattern: '^(0?[1-9]|1[0-2])(\/|\-|\.| )\d{2,4}$'
        card_number:
          description: "Credit card number."
          type: string
          pattern: '\d{8}|\d{12,19}'
        last_4_digits:
          description: Masked credit card number (last four digits).
          type: string
          pattern: '^\d{4}$'
        bin_number:
          description: |
            "The first six digits of the credit card number."
            "'BIN' = Bank Identification Number. (Also known as 'IIN'=Issuer Identification Number.)"
          type: string
          pattern: '^\d{6}$'
    RiskInstallments:
      type: object
      description: 'Installments description for payment.'
      required:
        - number_of_installments
      properties:
        number_of_installments:
          type: integer
          minimum: 0
    acquirer:
      properties:
        acquirer_id:
          type: string
        acquirer_country_code:
          type: string
          maxLength: 3
          example: 'USA'
    merchant:
      type: object
      properties:
        mcc:
          type: string
          pattern: '^[0-9]{4}$'
        merchant_name:
          type: string
        merchant_country_code:
          type: string
          maxLength: 3
          example: 'USA'
          pattern: '^[A-Z]{3}$'
        merchant_email:
          type: string
        merchant_zip_code:
          type: string
        merchant_city:
          type: string
    provider_specific_data:
      description: |
        This object contains provider specific objects, which contain data
        in key-value format. Use the <a href="https://developers.paymentsos.com/docs/bodybuilder.html" target="_blank">Bodybuilder</a> to generate a sample request that includes a
        `provider_specific_data` object.
      additionalProperties:
        type: object

    risk_analyses_resource:
      description: Risk Analyses
      allOf:
        - $ref: '#/components/schemas/new_risk_analyses'
        - type: object
      properties:
        id:
          description: Identifier of the risk analyses.
          type: string
          pattern: '^[{(]?[0-9A-Fa-f]{8}[-]?([0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}[)}]?$'
        result:
          $ref: '#/components/schemas/result'
        created:
          type: string
          description: The date and time that the authorization was created.
        payment_method:
          description: This represents the Payment Method selected by the customer to pay.
          type: object
          required:
            - type
          properties:
            href:
              description: |
                The href link to the associated Payment Method. Note - The href is only included here for a payment method that is associated with a customer.
              type: string
              pattern: >-
                ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w
                \.-]*)*\/?$
            type:
              description: |
                The type of payment method. Possible value: `tokenized`.
              type: string
              enum: ['untokenized', 'tokenized']
          oneOf:
            - $ref: '#/components/schemas/tokenized_response'
            - $ref: '#/components/schemas/untokenized_credit_card_response'
        provider_configuration:
          $ref: '#/components/schemas/provider_configuration'
        provider_data:
          $ref: '#/components/schemas/provider_data'
        ip_address:
          type: string
          description: The IP address of the customer making the payment.
        acquirer:
          $ref: "#/components/schemas/acquirer"
        installments:
          $ref: '#/components/schemas/RiskInstallments'
        provider_specific_data:
          $ref: '#/components/schemas/ProviderRequestSpecificData'
        authorization_code:
          type: string
        cvv_verification_code:
          type: string
          enum: ['M', 'N', 'P']
          description: |
            | M = match (passed)
            | N = no match (unknown)
            | P = not processed (disabled)
        three_d_secure_authentication_status:
          type: string
          enum: ['R', 'N', 'U', 'A', 'Y']
          description: |
            | R = authentication / account verification rejected; Issuer is rejecting authentication/verification and requests that authorisation not be attempted.
            | N = not authenticated / account not verified; Transaction denied
            | U (eci: 7 or 0) = enrolment not queried, unavailable, enrolment query error
            | A (eci: 6 or 1) = not enrolled, attempted authentication
            | Y (eci: 5 or 2) = authenticated successfully.
              merchant:
          $ref: "#/components/schemas/merchant"

    result:
      description: Result of the transaction.
      type: object
      required:
        - status
      properties:
        status:
          description: 'Status an be ''Pending'', ''Succeed'', or ''Failed''.'
          type: string
          enum:
            - Pending
            - Succeed
            - Failed
        category:
          description: Response category.
          type: string
        sub-category:
          description: Response sub-category.
          type: string
        description:
          description: Response description.
          type: string
    amount:
      description: Amount must be greater than 0. The amount is formatted in <a href="https://developers.paymentsos.com/docs/minor-currency-units.html" target="_blank">Minor Units</a>
        format.
      type: integer
      minimum: 0
    provider_configuration:
      description: |
        This object represents the configuration of the provider that handled the transaction, as defined in your PaymentsOS Control Center account. Note that the object does not include your provider authentication credentials.
      type: object
      required:
        - id
        - name
        - created
        - modified
        - account_id
        - provider_id
        - type
        - href
      properties:
        id:
          type: string
          description: The provider configuration id.
          example: 749be865-7a53-4d96-9d47-a17a1fc48f27
        name:
          type: string
          description: The provider configuration name.
          example: My provider configuration name
        description:
          type: string
          description: The provider configuration description.
          example: My provider configuration description.
        created:
          type: string
          description: The date and time that the configuration was created.
          example: "1517176845655"
        modified:
          type: string
          description: The date and time that the configuration was modified.
          example: "1518700731650"
        provider_id:
          type: string
          description: The identifier of the provider.
          example: 749be865-7a53-4d96-9d47-a17a1fc48f27
        type:
          type: string
          description: The provider type of the provider configuration.
          example: cc_processor
        account_id:
          type: string
          description: The identifier of the merchant account.
          example: 749be865-7a53-4d96-9d47-a17a1fc48f26
        href:
          type: string
          description: The href link to the related provider configuration.
          example: https://api.paymentsos.com/accounts/625eb972-6008-4bcf-bb6b-a95afc9ebccb/provider-configurations/15cddaa8-64d7-4145-a82f-6d573e16c4a9
    provider_data:
      description: >-
        This is the response from the external provider who is processing the
        transaction.
      type: object
      required:
        - provider_name
        - response_code
      properties:
        provider_name:
          description: Name of the external provider.
          type: string
        response_code:
          description: Response code received.
          type: string
        description:
          description: Description of the response code received.
          type: string
        raw_response:
          description: The raw response received.
          type: string
        transaction_id:
          type: string
          description: The ID of the transaction in the provider's system.
        external_id:
          type: string
          description: The ID of the payment in the provider's system.
        additional_information:
          type: object
          additionalProperties:
            description: Additional information from the provider in key/value pairs.
            type: string
        risk_analyses_result:
          $ref: '#/components/schemas/score_result'
    pass_luhn_validation:
      description: |
        When token_type is `credit_card`, then this indicates if the credit card number passed the luhn validation.
        Read more about the  <a href="https://en.wikipedia.org/wiki/Luhn_algorithm" target="_blank">Luhn Algorithm</a>.
      externalDocs:
        description: "Luhn Algorithm"
        url: https://en.wikipedia.org/wiki/Luhn_algorithm
      type: boolean
    score_result:
      type: object
      description: score result object
      properties:
        score:
          type: number
          description: The score attributed to this payment by our machine learning system, ranging from 0 (less likely to be fraud) to 1000 (more likely to be fraud)
          example: 896
        decision:
          type: string
          description: Indicates the outcome of Feedzai’s fraud analysis by indicating a recommendation based on the score. The decision can be approve, review or decline.
          example: approve
    ProviderRequestSpecificData:
      type: object
      properties:
        additional_details:
          type: object
          description: 'Values which are specific to provider, in Key-value pair format. For example, {key1: value1, key2: value2}.'
          example: { key1: 'value1', key2: 'value2' }
          additionalProperties:
            type: string
